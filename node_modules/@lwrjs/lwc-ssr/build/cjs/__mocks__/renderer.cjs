var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/lwc-ssr/src/__mocks__/renderer.ts
__markAsModule(exports);
__export(exports, {
  Renderer: () => Renderer,
  getRenderer: () => getRenderer
});
var mockComponents = {};
function getRenderer() {
  return new Renderer();
}
var Renderer = class {
  static __setMockComponent(specifier, output) {
    mockComponents[specifier] = output;
  }
  async render(components) {
    const results = {};
    const warnings = [];
    for (const [specifier] of Object.entries(components)) {
      const mockOutput = mockComponents[specifier];
      if (!mockOutput) {
        throw `component mock not found for: ${specifier}`;
      }
      if (mockOutput.result) {
        results[specifier] = mockOutput.result;
        if (mockOutput.result.warnings) {
          warnings.push(...mockOutput.result.warnings);
        }
      }
      if (mockOutput.error) {
        throw new Error(mockOutput.error);
      }
    }
    return {results, warnings, bundles: new Set([2, 3, 4])};
  }
};
