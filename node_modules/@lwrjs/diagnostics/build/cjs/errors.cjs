var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/diagnostics/src/errors.ts
__markAsModule(exports);
__export(exports, {
  DiagnosticsError: () => DiagnosticsError,
  LwrApplicationError: () => LwrApplicationError,
  LwrConfigError: () => LwrConfigError,
  LwrError: () => LwrError,
  LwrInvalidError: () => LwrInvalidError,
  LwrServerError: () => LwrServerError,
  LwrStatusError: () => LwrStatusError,
  LwrUnresolvableError: () => LwrUnresolvableError,
  isNodeError: () => isNodeError
});
function isNodeError(error) {
  return error instanceof Error;
}
var LwrError = class extends Error {
  constructor() {
    super(...arguments);
    this.name = "LwrError";
  }
};
var LwrServerError = class extends LwrError {
  constructor() {
    super(...arguments);
    this.name = "LwrServerError";
  }
};
var LwrApplicationError = class extends LwrError {
  constructor() {
    super(...arguments);
    this.name = "LwrApplicationError";
  }
};
var LwrInvalidError = class extends LwrError {
  constructor() {
    super(...arguments);
    this.name = "LwrInvalidError";
  }
};
var LwrUnresolvableError = class extends LwrError {
  constructor(message, type) {
    super(message);
    this.name = "LwrUnresolvableError";
    this.type = type;
  }
};
var LwrStatusError = class extends LwrError {
  constructor(message, status, headers) {
    super(message);
    this.name = "LwrStatusError";
    this.status = status;
    this.headers = headers;
  }
};
var DiagnosticsError = class extends LwrError {
  constructor(message, diagnostics = []) {
    super(message);
    this.diagnostics = diagnostics;
    this.name = "LwrDiagnosticsError";
  }
};
var LwrConfigError = class extends DiagnosticsError {
  constructor() {
    super(...arguments);
    this.name = "LwrConfigError";
  }
};
