var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/diagnostics/src/descriptions/invalid.ts
__markAsModule(exports);
__export(exports, {
  invalid: () => invalid
});
var invalid = {
  INVALID_JSON: () => "400: Accept header and json query parameter are incompatible",
  INVALID_API_VERSION: (apiVersion, expectedVersion) => `400: API Version "${escape(apiVersion)}" is not supported.  Expected "${expectedVersion}"`,
  INVALID_ENVIRONMENT: (environment) => `400: Environment "${escape(environment)}" is not supported`,
  INVALID_SPECIFIER: (specifier) => `400: Unable to resolve specifier "${escape(specifier)}" because it contains path traversal`,
  PRELOAD_MODULE: (specifier) => `Invalid preload module: ${escape(specifier)}`,
  INVALID_MODE: (mode) => `No configuration found for server mode - ${escape(mode)}`
};
