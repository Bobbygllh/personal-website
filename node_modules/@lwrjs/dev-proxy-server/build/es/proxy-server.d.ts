import { Application as ExpressApp } from 'express';
export interface LwrProxyConfiguration {
    proxyConfigs: ProxyConfigDefinition[];
    remoteOrigin?: string;
    basePath?: string;
}
type ProxyConfigDefinition = Array<string>;
export interface LwrProxyServerConfig extends LwrProxyConfiguration {
    port: number;
    defaultHost: string;
}
export interface LocalProxyServerConfig {
    defaultHost: string;
    basePath?: string;
    remoteOrigin?: string;
}
/**
 * A simple configuration-enabled local development proxy server.
 */
export declare class LwrProxyServer {
    proxyServer: ExpressApp;
    config: LwrProxyServerConfig;
    constructor(config: LwrProxyServerConfig);
    listen(callback?: ((opts: {
        port: number;
    }) => void) | undefined): Promise<{
        port: number;
    }>;
}
export {};
//# sourceMappingURL=proxy-server.d.ts.map