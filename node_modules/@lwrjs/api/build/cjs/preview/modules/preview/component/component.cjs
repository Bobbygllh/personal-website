var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};
var __exportStar = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, {get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable});
  }
  return target;
};
var __toModule = (module2) => {
  return __exportStar(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? {get: () => module2.default, enumerable: true} : {value: module2, enumerable: true})), module2);
};
var __decorate = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result)
    __defProp(target, key, result);
  return result;
};

// packages/@lwrjs/api/src/preview/modules/preview/component/component.ts
__markAsModule(exports);
__export(exports, {
  default: () => component_default
});
var import_lwc = __toModule(require("lwc"));
function kebabCaseToModuleSpecifier(name) {
  const newName = [];
  let nsFound = false;
  let upper = false;
  for (const currChar of name) {
    if (currChar === "-") {
      if (!nsFound) {
        nsFound = true;
        newName.push("/");
      } else {
        upper = true;
      }
    } else {
      newName.push(upper ? currChar.toUpperCase() : currChar);
      upper = false;
    }
  }
  return newName.join("");
}
var PreviewComponent = class extends import_lwc.LightningElement {
  async connectedCallback() {
    if (this.specifier) {
      const {default: Ctor} = await Promise.resolve().then(() => __toModule(require(kebabCaseToModuleSpecifier(this.specifier))));
      const element = (0, import_lwc.createElement)(this.specifier, {is: Ctor});
      this.template?.appendChild(element);
    }
  }
};
__decorate([
  import_lwc.api
], PreviewComponent.prototype, "specifier", 2);
var component_default = PreviewComponent;
