import { existsSync, rmSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import { createServer } from '@lwrjs/core';
import { logger } from '@lwrjs/diagnostics';
export function createPreviewServer(options) {
    const { rootDir, logLevel } = options;
    process.env.LWR_LOG_LEVEL = logLevel;
    const __dirname = dirname(fileURLToPath(import.meta.url));
    const projectDir = process.cwd();
    const internalAppDir = join(__dirname, '..', '..', 'preview');
    const providerDir = join(__dirname, 'providers');
    const cacheDir = join(projectDir, '__lwr_cache__');
    if (existsSync(cacheDir)) {
        logger.debug(`deleting pre-existing cache dir: ${cacheDir}`);
        rmSync(cacheDir, { recursive: true, force: true });
    }
    const serverConfig = {
        ignoreLwrConfigFile: true,
        rootDir: rootDir,
        serverMode: 'dev',
        lwc: {
            modules: [
                {
                    dir: join(internalAppDir, 'modules'),
                },
            ],
        },
        assets: [
            {
                alias: 'assets',
                dir: join(internalAppDir, 'assets'),
                urlPath: '/assets',
            },
        ],
        routes: [
            {
                id: 'home',
                path: '/',
                rootComponent: 'preview/app',
                layoutTemplate: join(internalAppDir, 'layouts', 'preview.njk'),
                bootstrap: {
                    syntheticShadow: true,
                },
            },
            {
                id: 'preview',
                path: '/:specifier',
                rootComponent: 'preview/component',
                layoutTemplate: join(internalAppDir, 'layouts', 'preview.njk'),
                routeHandler: join(internalAppDir, 'handlers', 'preview.ts'),
                bootstrap: {
                    syntheticShadow: true,
                },
            },
            {
                id: 'performance',
                path: '/performance/:specifier',
                layoutTemplate: join(internalAppDir, 'layouts', 'performance.njk'),
                routeHandler: join(internalAppDir, 'handlers', 'performance.ts'),
                bootstrap: {
                    syntheticShadow: true,
                },
            },
            {
                id: 'menu-items',
                path: '/api/menuItems',
                routeHandler: [
                    join(internalAppDir, 'handlers', 'menu-api.ts'),
                    {
                        projectDir,
                        namespacePaths: options?.namespacePaths,
                    },
                ],
            },
        ],
        moduleProviders: [
            '@lwrjs/app-service/moduleProvider',
            // attempt to resolve all module records relative to CLI root first
            [join(providerDir, 'root-lwc-module-provider.js'), { rootDir }],
            [join(providerDir, 'sfdx-module-provider.js'), { namespacePaths: options?.namespacePaths }],
        ],
    };
    return createServer(serverConfig);
}
//# sourceMappingURL=preview-server.js.map