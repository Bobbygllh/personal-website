import type { RuntimeEnvironment, RuntimeParams, BundleGroups, BundleConfig, ModuleBundler, ModuleRegistry } from '@lwrjs/types';
export type ViewPreloads = {
    groups: Map<string, boolean>;
    uris: string[];
    specifiers: string[];
    integrities: Map<string, string | undefined>;
    includedModules: string[];
};
/**
 * keeps track of preloadModules metadata
 */
export declare function setPreloadModulesMeta(specifier: string, uri: string, integrity: string | undefined, groups: BundleGroups, preloads: ViewPreloads, includedModules?: string[]): void;
/**
 * Recursively gets preloadModules metadata starting with a specifier
 * Note: don't call me unless you got bundles
 */
export declare function getPreloadModulesMeta(specifier: string, // un-versioned specifier
viewPreloads: ViewPreloads, bundleConfig: BundleConfig, moduleRegistry: ModuleRegistry, defRegistry: ModuleBundler, runtimeEnvironment: RuntimeEnvironment, runtimeParams: RuntimeParams, pending?: Map<string, boolean>): Promise<void>;
export declare function getPreloadModuleList(viewPreloads: ViewPreloads): string[];
//# sourceMappingURL=preload-utils.d.ts.map