import { type ContextProvidedCallback, type ContextBinding as IContextBinding } from '@lwc/shared';
import { type LightningElement } from './lightning-element';
import type { Signal } from '@lwc/signals';
declare class ContextBinding<C extends LightningElement> implements IContextBinding<LightningElement> {
    component: C;
    constructor(component: C);
    provideContext<V extends object>(contextVariety: V, providedContextSignal: Signal<unknown>): void;
    consumeContext<V extends object>(contextVariety: V, contextProvidedCallback: ContextProvidedCallback): void;
}
export { ContextBinding };
export declare function connectContext(le: LightningElement): void;
//# sourceMappingURL=context.d.ts.map